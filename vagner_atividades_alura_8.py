# -*- coding: utf-8 -*-
"""Vagner.Atividades.Alura.8

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IPfbG_kCF4d88TvuB0XUOMoxECNv5nfH
"""

class Conta:

    def __init__(self, numero, titular, saldo, limite):
        self.numero = numero
        self.titular = titular
        self.saldo = saldo
        self.limite = limite

    def deposita(self, valor):
        self.saldo += valor

    def saca(self, valor):
        if self.saldo < valor:
            print(f"Saldo insuficiente para saque de {valor}")
            return False
        else:
            self.saldo -= valor
            return True

    def extrato(self):
        print(f"Numero: {self.numero} \nTitular: {self.titular} \nSaldo: {self.saldo}")

    def transfere_para(self, destino, valor):
        if self.saca(valor):
            destino.deposita(valor)
            return True
        else:
            return False


# Testes das funcionalidades
if __name__ == "__main__":
    conta_pai = Conta('001-VP', 'Vagner Pai', 1000.0, 2000.0)
    conta_filho = Conta('002-VF', 'Vagner Filho', 300.0, 1000.0)

    print("Extrato inicial do Pai:")
    conta_pai.extrato()

    print("\nExtrato inicial do Filho:")
    conta_filho.extrato()

    conta_pai.deposita(200.0)
    print("\nApós depósito de 200 no Pai:")
    conta_pai.extrato()

    if conta_pai.saca(150.0):
        print("\nApós saque de 150 no Pai:")
    else:
        print("\nSaque de 150 no Pai falhou por saldo insuficiente.")
    conta_pai.extrato()

    print("\nTentando transferir 300 do Pai para o Filho...")
    if conta_pai.transfere_para(conta_filho, 300.0):
        print("Transferência realizada com sucesso!")
    else:
        print("Transferência falhou.")

    print("\nExtrato final do Pai:")
    conta_pai.extrato()

    print("\nExtrato final do Filho:")
    conta_filho.extrato()